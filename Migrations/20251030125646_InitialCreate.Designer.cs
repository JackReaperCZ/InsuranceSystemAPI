// <auto-generated />
using System;
using InsuranceSystemAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InsuranceSystemAPI.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20251030125646_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InsuranceSystemAPI.Models.GdprAuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Akce")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("akce");

                    b.Property<DateTime>("DatumCas")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("datum_cas");

                    b.Property<string>("Detaily")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("detaily");

                    b.Property<string>("IpAdresa")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ip_adresa");

                    b.Property<int>("PojistenecId")
                        .HasColumnType("int")
                        .HasColumnName("pojistenec_id");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("user_agent");

                    b.Property<int>("UzivatelId")
                        .HasColumnType("int")
                        .HasColumnName("uzivatel_id");

                    b.HasKey("Id");

                    b.HasIndex("UzivatelId");

                    b.HasIndex("PojistenecId", "DatumCas");

                    b.ToTable("gdpr_audit_logs");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.GdprConsent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumOdvolani")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("datum_odvolani");

                    b.Property<DateTime>("DatumUdeleni")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("datum_udeleni");

                    b.Property<string>("DuvodOdvolani")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("duvod_odvolani");

                    b.Property<string>("IpAdresa")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ip_adresa");

                    b.Property<bool>("JeAktivni")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("je_aktivni");

                    b.Property<int>("Kategorie")
                        .HasColumnType("int")
                        .HasColumnName("kategorie");

                    b.Property<int?>("OdvolanoKym")
                        .HasColumnType("int")
                        .HasColumnName("odvolano_kym");

                    b.Property<int>("PojistenecId")
                        .HasColumnType("int")
                        .HasColumnName("pojistenec_id");

                    b.Property<string>("Ucel")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ucel");

                    b.Property<int>("UdelenoKym")
                        .HasColumnType("int")
                        .HasColumnName("udeljen_kym");

                    b.Property<string>("VerzePodminek")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("verze_podminek");

                    b.HasKey("Id");

                    b.HasIndex("OdvolanoKym");

                    b.HasIndex("UdelenoKym");

                    b.HasIndex("PojistenecId", "Kategorie", "JeAktivni");

                    b.ToTable("gdpr_consents");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.Pojistenec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CisloOP")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DatumNarozeni")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DatumUpravy")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DatumVytvoreni")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("JeAktivni")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RodneCislo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CisloOP")
                        .IsUnique()
                        .HasFilter("[CisloOP] IS NOT NULL");

                    b.HasIndex("RodneCislo")
                        .IsUnique()
                        .HasFilter("[RodneCislo] IS NOT NULL");

                    b.ToTable("Pojistenci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresa = "Hlavní 123, Praha 1",
                            DatumNarozeni = new DateTime(1980, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumVytvoreni = new DateTime(2025, 10, 30, 12, 56, 46, 136, DateTimeKind.Utc).AddTicks(5818),
                            Email = "jan.novak@email.cz",
                            JeAktivni = true,
                            Jmeno = "Jan",
                            Prijmeni = "Novák",
                            RodneCislo = "8005150123",
                            Telefon = "+420123456789"
                        });
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.PojistnaSmlouva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CisloSmlouvy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DatumUpravy")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DatumVytvoreni")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("JeZaplacena")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("LimitPojisteni")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PlatnostDo")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PlatnostOd")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PojistenecId")
                        .HasColumnType("int");

                    b.Property<decimal>("PojistnaPartka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Poznamky")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<decimal?>("RocniPojistne")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SpravceId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TypPojisteni")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CisloSmlouvy")
                        .IsUnique();

                    b.HasIndex("PojistenecId");

                    b.HasIndex("SpravceId");

                    b.ToTable("PojistneSmlouvy");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.PojistnaUdalost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CastkaPlneni")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CisloPojistovny")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CisloUdalosti")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DatumCasUdalosti")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DatumNahlaseni")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DatumUpravy")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DatumVyrizeni")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MistoUdalosti")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("NahlasovatelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OdhadSkody")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PenezniRezerva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PojistenecId")
                        .HasColumnType("int");

                    b.Property<int>("PojistnaSmlouvaId")
                        .HasColumnType("int");

                    b.Property<string>("PopisSkody")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("PoznamkyLikvidatora")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Svedci")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("VyrizovatelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("VyseNahrady")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VyseSkody")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("NahlasovatelId");

                    b.HasIndex("PojistenecId");

                    b.HasIndex("PojistnaSmlouvaId");

                    b.HasIndex("VyrizovatelId");

                    b.ToTable("PojistneUdalosti");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.SouborSmlouvy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CestaSouboru")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DatumNahrani")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NazevSouboru")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PojistnaSmlouvaId")
                        .HasColumnType("int");

                    b.Property<string>("Popis")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TypSouboru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("VelikostSouboru")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PojistnaSmlouvaId");

                    b.ToTable("SouborySmluv");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.SouborUdalosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CestaSouboru")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DatumNahrani")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("KategorieSouboru")
                        .HasColumnType("int");

                    b.Property<string>("NazevSouboru")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PojistnaUdalostId")
                        .HasColumnType("int");

                    b.Property<string>("Popis")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TypSouboru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("VelikostSouboru")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PojistnaUdalostId");

                    b.ToTable("SouboryUdalosti");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.Uzivatel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumVytvoreni")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("JeAktivni")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("PosledniPrihlaseni")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UzivatelskeJmeno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UzivatelskeJmeno")
                        .IsUnique();

                    b.ToTable("Uzivatele");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumVytvoreni = new DateTime(2025, 10, 30, 12, 56, 46, 135, DateTimeKind.Utc).AddTicks(7557),
                            Email = "admin@insurance.cz",
                            HashedPassword = "$2a$11$dKfLMxmjGLNvB7aMiCcOCOLG3B.3ESc9LHsHPqERFej6bHlHr2Wru",
                            JeAktivni = true,
                            Jmeno = "Administrátor",
                            Prijmeni = "Systému",
                            Role = 1,
                            UzivatelskeJmeno = "admin"
                        });
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.GdprAuditLog", b =>
                {
                    b.HasOne("InsuranceSystemAPI.Models.Pojistenec", "Pojistenec")
                        .WithMany()
                        .HasForeignKey("PojistenecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsuranceSystemAPI.Models.Uzivatel", "Uzivatel")
                        .WithMany()
                        .HasForeignKey("UzivatelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pojistenec");

                    b.Navigation("Uzivatel");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.GdprConsent", b =>
                {
                    b.HasOne("InsuranceSystemAPI.Models.Uzivatel", "OdvolalUzivatel")
                        .WithMany()
                        .HasForeignKey("OdvolanoKym")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InsuranceSystemAPI.Models.Pojistenec", "Pojistenec")
                        .WithMany()
                        .HasForeignKey("PojistenecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsuranceSystemAPI.Models.Uzivatel", "UdelilUzivatel")
                        .WithMany()
                        .HasForeignKey("UdelenoKym")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OdvolalUzivatel");

                    b.Navigation("Pojistenec");

                    b.Navigation("UdelilUzivatel");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.PojistnaSmlouva", b =>
                {
                    b.HasOne("InsuranceSystemAPI.Models.Pojistenec", "Pojistenec")
                        .WithMany("PojistneSmlouvy")
                        .HasForeignKey("PojistenecId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InsuranceSystemAPI.Models.Uzivatel", "Spravce")
                        .WithMany("SpravovaneSmlouvy")
                        .HasForeignKey("SpravceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Pojistenec");

                    b.Navigation("Spravce");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.PojistnaUdalost", b =>
                {
                    b.HasOne("InsuranceSystemAPI.Models.Uzivatel", "Nahlasovatel")
                        .WithMany()
                        .HasForeignKey("NahlasovatelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("InsuranceSystemAPI.Models.Pojistenec", null)
                        .WithMany("PojistneUdalosti")
                        .HasForeignKey("PojistenecId");

                    b.HasOne("InsuranceSystemAPI.Models.PojistnaSmlouva", "PojistnaSmlouva")
                        .WithMany("PojistneUdalosti")
                        .HasForeignKey("PojistnaSmlouvaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InsuranceSystemAPI.Models.Uzivatel", "Vyrizovatel")
                        .WithMany("VyrizovaneUdalosti")
                        .HasForeignKey("VyrizovatelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Nahlasovatel");

                    b.Navigation("PojistnaSmlouva");

                    b.Navigation("Vyrizovatel");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.SouborSmlouvy", b =>
                {
                    b.HasOne("InsuranceSystemAPI.Models.PojistnaSmlouva", "PojistnaSmlouva")
                        .WithMany("PripojeneSoubory")
                        .HasForeignKey("PojistnaSmlouvaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PojistnaSmlouva");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.SouborUdalosti", b =>
                {
                    b.HasOne("InsuranceSystemAPI.Models.PojistnaUdalost", "PojistnaUdalost")
                        .WithMany("PripojeneSoubory")
                        .HasForeignKey("PojistnaUdalostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PojistnaUdalost");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.Pojistenec", b =>
                {
                    b.Navigation("PojistneSmlouvy");

                    b.Navigation("PojistneUdalosti");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.PojistnaSmlouva", b =>
                {
                    b.Navigation("PojistneUdalosti");

                    b.Navigation("PripojeneSoubory");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.PojistnaUdalost", b =>
                {
                    b.Navigation("PripojeneSoubory");
                });

            modelBuilder.Entity("InsuranceSystemAPI.Models.Uzivatel", b =>
                {
                    b.Navigation("SpravovaneSmlouvy");

                    b.Navigation("VyrizovaneUdalosti");
                });
#pragma warning restore 612, 618
        }
    }
}
